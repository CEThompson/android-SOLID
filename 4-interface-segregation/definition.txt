// An example of interface segregation in action
// Note that each client depends upon an interface only implementing
// the methods needed, rather than both methods from the concrete service

public class Client1 {
	private ServiceAbs1 serviceAbs1;
	public Client1(ServiceAbs1 serviceAbs1) {
		this.serviceAbs1 = serviceAbs1;
	}
	...
}

public class Client2 {
	private ServiceAbs2 serviceAbs2;
	public Client1(ServiceAbs2 serviceAbs2) {
		this.serviceAbs2 = serviceAbs2;
	}
	...
}

public interface ServiceAbs1 {
	void method1();
}

public interface ServiceAbs2 {
	void method2();
}

public class Service implements ServiceAbs1, ServiceAbs2 {
	@Override
	public void method1() { ... }
	@Override
	public void method2() { ... }
}