// Now service may be reused
// Dependency Inversion principle contributes to reusability

Client implements Callback {
	- Service;
	+ doSomething(){
		doSomethingPhaseOne();
		service.doSomethingAsync( () -> doSomethingPhaseTwo() );
	}
	- doSomethingPhaseOne(){}
	- doSomethingPhaseTwo(){}

}

Service implements Service.Callback {
	interface Callback {
		+ onDoSomethingAsyncDone()
	}

	+ doSomethingAsync(Callback callback){
		...
		callback.onDoSomethingAsyncDone();
	}

	@Overrides
	onDoSomethingAsyncDone()
}

